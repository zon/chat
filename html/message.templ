package html

import "github.com/zon/chat/core"

templ NewMessageForm() {
    <form id="foot" ws-send hx-vals="js:{text: getMessageValue()}">
        <p id="message" contenteditable="true"></p>
        <button class="primary" type="submit">Send</button>
    </form>
}

templ Message(msg core.Message, more bool) {
    <div
        id={ msg.HtmlID() }
        class="message"
        if more {
            hx-get={ "/messages?before=" + core.FormatTime(msg.CreatedAt) }
            hx-trigger="intersect once"
            hx-swap="afterend"
        }
    >
        <p class="details">
            <span class="user">{ msg.User.Name }</span>
            <spwn class="time">{ core.FormatNaturalTime(msg.CreatedAt) }</spwn>
        </p>
        <div class="content">
            @templ.Raw(msg.Content)
        </div>
    </div>
}

templ Messages(messages []core.Message) {
    {{ length := len(messages) }}
    for m, msg := range messages {
        @Message(msg, m >= length-1)
    }
}

templ OobMessage(msg core.Message) {
    <div id="messages" hx-swap-oob="afterbegin">
        @Message(msg, false)
    </div>
}