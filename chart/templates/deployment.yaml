apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
      - name: zitadel
        secret:
          secretName: zitadel
      containers:
      - name: main
        image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        env:
        - name: PGHOST
          value: {{ .Values.postgres.host }}
        - name: PGPORT
          value: "{{ .Values.postgres.port }}"
        - name: PGUSER
          value: {{ .Values.postgres.user }}
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.postgres.password.secret }}
              key: {{ .Values.postgres.password.key }}
        - name: PGDATABASE
          value: {{ .Values.postgres.database }}
        - name: MEMCACHED_HOST
          value: {{ .Values.memcached.host }}
        - name: MEMCACHED_PORT
          value: "{{ .Values.memcached.port }}"
        - name: WURBS_NATS_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.nats.secret }}
              key: {{ .Values.nats.keys.url }}
        - name: WURBS_NATS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.nats.secret }}
              key: {{ .Values.nats.keys.password }}
        - name: WURBS_WS_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.websocket.secret }}
              key: {{ .Values.websocket.keys.host }}
        - name: WURBS_WS_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.websocket.secret }}
              key: {{ .Values.websocket.keys.user }}
        - name: WURBS_WS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.websocket.secret }}
              key: {{ .Values.websocket.keys.password }}
        - name: WURBS_URL
          value: https://{{ .Values.host }}
        - name: PORT
          value: "{{ .Values.port }}"
        volumeMounts:
        - name: zitadel
          readOnly: true
          mountPath: "/etc/wurbs"
        command:
        - wurbs-server
        - /etc/wurbs/token.json
        ports:
        - containerPort: {{ .Values.port }}
